node{
    def MavenHome
    def MavenCMD
    def docker
    def dockerCMD
    def tagName = 1.0
    
    
    stage('preparation'){
        echo "preparing the environment"
        mavenHome= toolname: 'maven 3', type: 'maven'
        mavenCMD = "${mavenHome}/bin/mvn"
        docker=tool name:'docker', type: 'org.jenkinssci.plugins.docker.common.tools.DockerTool'
        dockerCMD="$docker/bin/docker"
        
    stage('git checkout'){
        try{
            echo "checking out code from git repository..."
            git 'https://github.com/saravanan-subramani123/edureka-project-batch21March.git'
        }
        catch(Exception err)
        {
            echo "Exception occured which git checkout"
            currentBuild.result = "FAILURE"
            mail bcc:"",body: "Hi Team,
            
            Please go thrugh the $(BUILD_URL) for more details.", cc:'team@xyz.com', from:"", replyTo: "", subject:'Job $(JOB_NAME}', to : 'dev@xyz.com'
        }
    }
    
    stage('Build, Test and Package')
    {
        echo "Building the addressbook application..."
        sh "$(mavenCMD} clean package"
    }
    
    stage('Sonar Scan')
    {
        echo "Scanning application for potential vulnerabilities..."
        //sh 'mvn sonar:sonar -Dsonar.host.url=http://34.70.58.106:9000'
    }
    
    stage('publish report')
    {
        echo "Publishing HTML reports..."
        publishHTML([allowMissing:false, alwaysLinkToLastBuild:false, keepAll:false, reportDir:"", reportFiles: 'index.html', reportName: 'HTML Report', reportTitles:''])
    }
    
    stage('Build Docker Image')
      echo "Building dokcer images for addressbook application"
      sh "${dockerCMD} build -t saravanansubramani123/addressbook:${tagName}."

    }
    
    stage{'docker push'){
        withCredentials([string(credentialsId:'dockerPwd', variable:'dockerHubPwd')]){
            sh "${dockerCMD} login -u saravanansubramani123 -p ${dokcerHubPwd}"
            sh "${dockerCMD} push saravanansubramani123/addressbook:${tagName}"
        }
    }
    
    stage('Deploy Application')
    {
        echo "Executing Ansible playbook..."
        echo "Installing required softwares in the nodes"
        echo "Deploying Application..."
        
        //ansiblePlaybook colorized:true, credentialsId:'ssh', disableHostKeyChecking: true, installation: 'ansible 2.9.22', inventory:'/etc/ansible/hosts', playbook:'deploy-playbook.yml'
    }
    
    
    stage('clean up')
    {
        echo "clearing up the workspace..."
        cleanWS()
    }
    
    stage('Send Email')
    {
        echo "Sending email to the user"
        emailtext attachLog: true, body: "Dear Developer, Please be informed that your build has been currentBuild.result. Request you to please have a look", subject: 'Build Status', to: 'ssg19206'
    }
        
    }



withCredentials([string(credentialsId: 'docker-hub-password-pipe', variable: 'dockerHubPwd')]) {
    // some block
}

ansiblePlaybook become: true, disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'configure-deploy-playbook.yml'



curl -X POST http://172.31.20.218:8080/job/edureka-demo-21marchbatch/build --user admin:admin -H 'Jenkins-Crumb: 0db38413bd7ec9e98974f5213f7ead8b'

curl -X POST http://172.31.20.218:8080/job/edureka-demo-21marchbatch/build --user admin:admin -H 'Jenkins-Crumb: dececa98bae2009f0eed916fe4680eee493756558f656616da37c17f2daf3291'

dececa98bae2009f0eed916fe4680eee493756558f656616da37c17f2daf3291

curl -v -X GET http://172.31.20.218:8080/crumbIssuer/api/json --user admin:admin
